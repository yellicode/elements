/*
* Copyright (c) 2018 Yellicode
*
* This Source Code Form is subject to the terms of the Mozilla Public
* License, v. 2.0. If a copy of the MPL was not distributed with this
* file, You can obtain one at http://mozilla.org/MPL/2.0/.
*/

/**
* This code was generated by a tool.
* 
* Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
*/
import * as model from './interfaces';

const PRIMITIVE_BOOLEAN_ID = "boolean_id";
const PRIMITIVE_INTEGER_ID = "integer_id";
const PRIMITIVE_REAL_ID = "real_id";
const PRIMITIVE_STRING_ID = "string_id";
const PRIMITIVE_OBJECT_ID = "object_id";

/**
* Returns a boolean value indicating if the element is a built in primitive boolean.
*/
export function isPrimitiveBoolean(element: model.Element | null): boolean {
	if (!element) return false;
	return element.id === PRIMITIVE_BOOLEAN_ID;
}

/**
* Returns a boolean value indicating if the element is a built in primitive integer.
*/
export function isPrimitiveInteger(element: model.Element | null): boolean {
	if (!element) return false;
	return element.id === PRIMITIVE_INTEGER_ID;
}

/**
* Returns a boolean value indicating if the element is a built in primitive real.
*/
export function isPrimitiveReal(element: model.Element | null): boolean {
	if (!element) return false;
	return element.id === PRIMITIVE_REAL_ID;
}

/**
* Returns a boolean value indicating if the element is a built in primitive string.
*/
export function isPrimitiveString(element: model.Element | null): boolean {
	if (!element) return false;
	return element.id === PRIMITIVE_STRING_ID;
}

/**
* Returns a boolean value indicating if the element is a built in primitive object.
*/
export function isPrimitiveObject(element: model.Element | null): boolean {
	if (!element) return false;
	return element.id === PRIMITIVE_OBJECT_ID;
}
